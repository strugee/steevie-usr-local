#!/bin/sh
# TODO: improve this to not stop Apache when `letsencrypt renew --domain` works
# TODO: write to a logfile

set -eu

. /usr/local/lib/common/functions.sh

logging_init

cert_identity() {
	sha256sum /etc/letsencrypt/live/$1/cert.pem | cut -d' ' -f1
}

if [ $(id -u) -ne 0 ]; then
	echo 'renew-letsencrypt: not invoked as root; bailing'
	exit 1
fi

# Internal

if ! [ -z ${1+x} ]; then
	if [ "$1" = _pre_hook ]; then
		log_info 'Running as _pre_hook internal command.'

		echo "Stopping Apache, pump.io, Sandstorm, and Bitwarden."
		# TODO stop only the LXD Bitwarden proxy device, not the whole container
		# Need the full path to /snap/bin/lxc because apparently /snap/bin isn't on PATH in cronjobs.
		if systemctl stop apache2 && systemctl stop pump.io@mongodb && systemctl stop sandstorm && /snap/bin/lxc stop bitwarden; then
			exit 0
		else
			echo "Stopping services failed. This probably indicates a serious misconfiguration."
			echo "Mailing root."
			echo "Execution of \`systemctl stop apache2 && systemctl stop pump.io@mongodb && systemctl stop sandstorm && lxc stop bitwarden\` failed while renewing Let's Encrypt certificates.\n\nThis probably indicates a serious misconfiguration. Please investigate as soon as possible.\n\n - crond" | mail -s "renew-letsencrypt: failed to stop Apache, pump.io, Sandstorm or Bitwarden" root
			exit 1
		fi
	fi

	if [ "$1" = _post_hook ]; then
		log_info 'Running as _post_hook internal command.'

		FAILED=0
		echo "Unconditionally restarting Apache."
		systemctl start apache2 || FAILED=1
		echo "Unconditionally restarting pump.io."
		# XXX uncomment when I unmask pump.io@mongodb
		# DO NOT COMMENT JUST FAILED=1 because then Sandstorm and Bitwarden will not be restarted due to set -e.
		#systemctl start pump.io@mongodb || FAILED=1
		echo "Unconditionally restarting Sandstorm."
		systemctl start sandstorm || FAILED=1
		echo "Unconditionally restarting Bitwarden."
		lxc start bitwarden || FAILED=1

		exit $FAILED
	fi
fi

log_info 'Running as toplevel script.'

MAIN_CERT_UNIQUEID=$(cert_identity strugee.net)
MAIL_CERT_UNIQUEID=$(cert_identity mail.strugee.net)
ZNC_CERT_UNIQUEID=$(cert_identity znc.strugee.net)

# `git commit` exits 1 if there are no changes to commit and we've `set -eu pipefail` above
if [ $(etckeeper vcs status --porcelain | wc -l) -gt 0 ]; then
	etckeeper commit "Commit changes prior to renew-letsencrypt run"
fi

echo "Invoking Let's Encrypt."
if letsencrypt renew --noninteractive --pre-hook "$0 _pre_hook" --post-hook "$0 _post_hook"; then
	echo "Renewal succeeded."
else
	echo "Failed to renew some certificates. Mailing root."
	echo "Execution of \`letsencrypt renew\` failed while renewing Let's Encrypt certificates.\n\nThis may indicate a misconfiguration. Please investigate as soon as possible.\n\n - crond" | mail -s "renew-letsencrypt: failed to execute \`letsencrypt renew\`" root
fi

# TODO: consider migrating this to --renew-hook

FAILED=0

if [ $MAIN_CERT_UNIQUEID != $(cert_identity strugee.net) ]; then
	echo "Rebuilding ejabberd certificates due to updated certificate."
	generate-ejabberd-bundle
	echo "Rebuilding Cockpit certificates due to updated certificate."
	generate-cockpit-bundle
	echo "Restarting ejabberd due to updated certificate."
	systemctl restart ejabberd || FAILED=1
	echo "Restarting Cockpit due to updated certificate."
	systemctl restart cockpit || FAILED=1
fi

if [ $MAIL_CERT_UNIQUEID != $(cert_identity mail.strugee.net) ]; then
	echo "Restarting Postfix due to updated certificate."
	systemctl restart postfix || FAILED=1
	echo "Restarting Dovecot due to updated certificate."
	systemctl restart dovecot || FAILED=1
fi

if [ $ZNC_CERT_UNIQUEID != $(cert_identity znc.strugee.net) ]; then
	echo "Rebuilding ZNC certificates due to updated certificate."
	generate-znc-bundle
	echo "Not restarting ZNC because client connections will cause a certificate reload."
fi

etckeeper commit "Renew and rebuild TLS certificates" || true

exit $FAILED
